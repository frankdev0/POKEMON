import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Pokemon.module.css";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

interface pokemonProps {
  id: string;
  url: string;
  name: string;
  imageUrl:string;
  pokemon: {
    id: string;
    url: string;
    name: string;
  }

}


export default function Pokemondetails() {

  const [selectedPokemon, setSelectedPokemon] = useState<pokemonProps[]>([]);
  const router = useRouter();
  const { id } = router.query;

  console.log('name', id)




  useEffect(() => {
    const fetchData = async () => {
        try {
            const response = await axios.get(`https://pokeapi.co/api/v2/type/${id}/`);
            console.log('first', response?.data)
            setSelectedPokemon(response?.data?.pokemon);
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    };

    fetchData();
}, [id]);



const handleViewClick = (name: string) => {
  console.log('name', name)
};

 

  return (
    <>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
       <Navbar/>
       <div className="my-5">
       <div className={styles.pokemongrid}>

       
        <div className={`${styles.tablebody} row`}>
            <div className='col-12'>
            <div>
          
          <div className={styles.tableContainer}>
        <table className={`${styles.customTable}`}>
      <thead>
        <tr>
          <th className={styles.tableheader}>ID.</th>
          <th className={styles.tableheader}>TITLE</th>
          <th className={styles.tableheader}>URL</th>
          {/* <th className={styles.tableheader}>D</th> */}
          <th className={styles.tableheader}>Action</th>
        </tr>
      </thead>
      <tbody>
                {selectedPokemon && selectedPokemon.map((item, index) => {
                  const { pokemon } = item;
                  const isEvenRow = index % 2 === 0;
                  const cellStyle = {
                    maxWidth: '200px',
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                  };

                  return (
                    <tr key={index} className={isEvenRow ? styles.evenrow : styles.oddrow}>
                      <td>{index + 1}</td>
                      <td style={cellStyle}>{pokemon.name}</td>
                      <td style={cellStyle}>{pokemon.url}</td>
                      <td>
                      <div>
                        <li onClick={() => handleViewClick(pokemon.name)}>{pokemon.name}</li>
                    </div>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
    </table>
    </div>
    </div>
    </div>
    </div>s
    </div>
       </div>
       <Footer/>
      </main>
    </>
  );
}
